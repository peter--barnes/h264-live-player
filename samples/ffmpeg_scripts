    ffmpeg options:
        -b:v 1024k                     this option can reset to smaller data size and run much faster,but not as clear as before
    生产者:
        [carmera]:
            ffmpeg -re -i long.h264 -f v4l2 /dev/video0           
            ffmpeg -re -i out.h264 -f v4l2 /dev/video0           
        [rtsp]
            ffmpeg -i  rtsp://admin:12345@192.168.0.12:554/Streaming/Channels/101 -profile:v baseline -f h264 tmp.h264
    server:
            ffmpeg -f video4linux2 -i /dev/video0 http://localhost:8082/feed1.ffm
        [expect]: profile must be set to baseline
            ffmpeg -t 0 -r 25 -i /dev/video0 -profile:v baseline  -f h264 - | nc -k -l 8082


    [current] 
        raspivid -t 0 -o - -w 1280 -h 720 -fps 25 | nc -k -l 5001
    nc server:
        [fake]
            ffmpeg -re -i long.h264 -preset ultrafast -profile:v baseline -f h264 - | nc -k -l 8082
            ffmpeg -re -i out.h264 -profile:v baseline -f h264 - | nc -k -l 8082
        [expect,real]
            ffmpeg -i  rtsp://admin:12345@192.168.0.12:554/Streaming/Channels/101 -s 1280x720 -preset ultrafast -profile:v baseline -f h264 - | nc -k -l 8082
            ffmpeg -i  rtsp://admin:12345@192.168.0.12:554/Streaming/Channels/101 -vcodec copy -acodec copy -f h264 - | nc -k -l 8082
            ffmpeg -i "rtsp://admin:admin@192.168.0.104:554/cam/realmonitor?channel=1&subtype=0" -preset ultrafast -s 1280x720 -profile:v baseline -f h264 - | nc -k -l 8082
            ffmpeg -i rtsp://admin:12345@192.168.0.11:554/Streaming/Channels/101 -preset ultrafast -s 1280x720 -profile:v baseline -f h264 - | nc -k -l 8082
            ffmpeg -i rtsp://admin:12345@192.168.0.11:554/Streaming/Channels/101 -preset ultrafast -profile:v baseline  tmp.h264
        nc transfer:
            echo 1111|nc -k -l 10000
            nc 127.0.0.1 10000
            ffmpeg -re -i long.h264 -profile:v baseline -f h264 - | nc -k -l 8082
            nc 127.0.0.1 8082 | ffplay -

    udp server:
        ffmpeg -re -i long.h264 -video_size 1280x720 -f h264 udp://127.0.0.1:20000
        ffmpeg -re -i "udp://@127.0.0.1:20000?overrun_nonfatal=1" -profile:v baseline -f h264 - | nc -k -l 8082
        ffplay udp://127.0.0.1:20000

    [expect]
        ffmpeg -re -i long.h264 -video_size 1280x720 -f h264 udp://127.0.0.1:20000
        ffmpeg -re -i "udp://@127.0.0.1:20000?overrun_nonfatal=1" -profile:v baseline -f h264 -listen 1 http://127.0.0.1:8082

    (failed) tcp server:
    [can't play by h264-live,listen 2 are not support(ffmpeg do not implement this feature)]  
            ffmpeg -re -i out.h264 -profile:v baseline -f h264 -listen 1 http://127.0.0.1:8082

    MP4Box -add  long.h264 -fps 24 long.mp4
    MP4Box -dash 1000 -rap -frag-rap long.mp4

    [play]
        ffplay rtsp://admin:12345@192.168.3.13:554/Streaming/Channels/101
        ffplay rtsp://admin:12345@192.168.0.12:554/Streaming/Channels/101
        ffplay rtsp://admin:12345@192.168.0.12:554/Streaming/Channels/101
        ffplay "rtsp://admin:admin@192.168.0.104:554/cam/realmonitor?channel=1&subtype=0"
        ffplay rtsp://admin:12345@192.168.0.11:554/Streaming/Channels/101
        ffplay rtsp://ewns-hls-b-stream.hexaglobe.net/rtpeuronewslive/en_vidan750_rtp.sdp

/usr/bin/websock_rtsp_proxy --config /etc/ws_rtsp.ini






    ffserver:
        sudo ffserver -f ffserver.conf
    [fake]
        ffmpeg -re -i long.h264 http://localhost:8082/feed1.ffm
        ffmpeg -re -i out.h264 http://localhost:8082/feed1.ffm

        sudo ffserver -f ffserver.conf;ffmpeg -re -i out.h264 http://localhost:8082/feed1.ffm

carmer -> httpserver (websocket):
    [expect]
        ffmpeg -s 1280x720 -f video4linux2 -i /dev/video0 -f h264 http://127.0.0.1:8082/123/1280/720/
    [current]
        ffmpeg -s 1280x720 -f video4linux2 -i /dev/video0 -f  mpeg1video -b 800k -r 30 http://127.0.0.1:8082/123/1280/720/

play rtp/http :
    [current]
        ffplay http://127.0.0.1:8082/
        ffplay http://127.0.0.1:8082/test.h264

        //海康：研发办公室
        rtsp://admin:12345@192.168.0.11:554/Streaming/Channels/101
        rtsp://admin:12345@192.168.0.12:554/Streaming/Channels/101		
        rtsp://admin:admin@192.168.0.104:554/cam/realmonitor?channel=1&subtype=0
        //大华：墙角
        rtsp://admin:admin@192.168.0.18:554/cam/realmonitor?channel=1&subtype=0
        //海康：对着墙的摄像机
        rtsp://admin:12345@192.168.0.12:554/Streaming/Channels/101
        //海康：会议室桌上的跟踪球机
        rtsp://admin:12345@192.168.3.13:554/Streaming/Channels/101
        //海康：NVR，通道号1到2
        rtsp://admin:12345@192.168.1.14:554/Streaming/Channels/101
        rtsp://admin:12345@192.168.1.14:554/Streaming/Channels/201
        //美电贝尔：门口
        rtsp://admin:admin@192.168.2.50:554/mpeg4
        //讯通：机房里面的
        rtsp://192.168.0.36:8557/PSIA/Streaming/channels/2?videoCodecType=H.264
        //科达：机房
        rtsp://192.168.0.51/id=0


ffmpeg -re -i test.h264 -vcodec copy -f h264 http://127.0.0.1:8082/123/640/480/
ffmpeg -i /dev/video0 -listen 1 -f h264     -c:v libx264 -preset fast -tune zerolatency http://:8082

virtual carmer:
    sudo apt-get install module-assistant
    sudo m-a prepare
    sudo m-a update
    sudo m-a a-i v4l2loopback

    cd /usr/src
    sudo dpkg -i v4l2loopback-modules-3.0.0-12-generic_0.4.0-1+3.0.0-12.20_i386.deb(在/usr/src目录下)
    sudo modprobe v4l2loopback
    ls /dev/video0

     如果需要开机自启动,则需要把它放到:/etc/modules 中
    sudo vim /etc/modules
    v4l2loopback

